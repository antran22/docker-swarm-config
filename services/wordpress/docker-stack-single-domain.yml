version: "3.7"

services:
  mysql:
    image: mariadb:10.7.4-focal
    deploy:
      placement:
        constraints:
          - node.labels.data == true
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 10
        window: 15s
    environment:
        MYSQL_DATABASE: wordpress
        MYSQL_USER: wordpress
        MYSQL_PASSWORD: wordpress
        MYSQL_ROOT_PASSWORD: wordpressroot
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - default

  wordpress:
    image: antran2202/docker-wordpress:wp6.0_php7.4
    deploy:
      placement:
        constraints:
          - node.labels.data == true
      replicas: 1
      update_config:
        parallelism: 1
        delay: 5s
        order: start-first
      restart_policy:
        condition: any
        delay: 10s
        max_attempts: 10
        window: 15s
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public

        - traefik.http.routers.${STACK_NAME}-http.rule=HostRegexp(`${DOMAIN}`)
        - traefik.http.routers.${STACK_NAME}-http.entrypoints=http
        - traefik.http.routers.${STACK_NAME}-http.middlewares=https-redirect

        - traefik.http.routers.${STACK_NAME}-https.rule=HostRegexp(`${DOMAIN}`)
        - traefik.http.routers.${STACK_NAME}-https.entrypoints=https
        - traefik.http.routers.${STACK_NAME}-https.tls=true
        - traefik.http.routers.${STACK_NAME}-https.tls.certresolver=le
       
        - traefik.http.routers.${STACK_NAME}-https.priority=1
        
        - traefik.http.services.${STACK_NAME}.loadbalancer.server.port=80

    environment:
        DB_HOST: mysql
        DB_USER: wordpress
        DB_PASSWORD: wordpress
        DB_NAME: wordpress
        WORDPRESS_TABLE_PREFIX: wp_
        WORDPRESS_SITE_URL: https://${DOMAIN}
        FS_METHOD: direct

    volumes:
      - wp_content:/var/www/wp-content
    networks:
      - default
      - traefik-public
  mysql_backup:
    image: schickling/mysql-backup-s3       
    links:
      - mysql
    environment:
      SCHEDULE: '@daily'
      S3_REGION: ${AWS_REGION}
      S3_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      S3_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      S3_BUCKET: ${AWS_S3_UPLOAD_BUCKET_NAME}
      S3_PREFIX: "${STACK_NAME}_mysql_dump"
      MYSQLDUMP_DATABASE: wordpress
      MYSQL_HOST: mysql 
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress

  wpcontent_backup:
    image: offen/docker-volume-backup:v2.17.1
    deploy:
      placement:
        constraints:
          - node.labels.data == true
    environment:
      AWS_S3_BUCKET_NAME: ${AWS_S3_UPLOAD_BUCKET_NAME}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_S3_PATH: "${STACK_NAME}_wp_content_dump"
    volumes:
      - wp_content:/backup/wp_content:ro


volumes:
  wp_content:
    driver: local
  mysql_data:
    driver: local
    
networks:
  traefik-public:
    external: true
    name: traefik-public

  default:

